/**
 * Definition for singly-linked list.
 * function ListNode(val, next) {
 *     this.val = (val===undefined ? 0 : val)
 *     this.next = (next===undefined ? null : next)
 * }
 */
/**
 * @param {ListNode} l1
 * @param {ListNode} l2
 * @return {ListNode}
 */
var addTwoNumbers = function (l1, l2) {
    let head1 = l1
    let head2 = l2

    let dummy = new ListNode(0)
    const head = dummy

    let carry = 0

    while (head1 || head2) {
        const val1 = head1?.val ?? 0
        const val2 = head2?.val ?? 0
        const sum = val1 + val2 + carry

        const node = new ListNode(0)


        if (sum > 9) {
            const lastDigit = sum % 10
            node.val = lastDigit
            carry = Math.floor(sum / 10)

        } else {
            node.val = sum
            carry = 0

        }

        dummy.next = node
        dummy = node
        head1 = head1?.next
        head2 = head2?.next
    }

    if(carry>0){
        dummy.next=new ListNode(carry)
    }

    return head.next

};