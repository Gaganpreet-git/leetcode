/**
 * Definition for a binary tree node.
 * function TreeNode(val, left, right) {
 *     this.val = (val===undefined ? 0 : val)
 *     this.left = (left===undefined ? null : left)
 *     this.right = (right===undefined ? null : right)
 * }
 */
/**
 * @param {TreeNode} root
 * @return {number}
 */
var findSecondMinimumValue = function (root) {
    let secondMin = Infinity;

    function traverse(node) {
        if (!node) return

        if (node.val > root.val && node.val) {
            secondMin = Math.min(secondMin, node.val)
        }


        traverse(node.left)
        traverse(node.right)
    }

    traverse(root)

    return secondMin === Infinity ? -1 : secondMin;

};